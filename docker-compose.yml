version: "3"

services:
  fapinstructor-api:
    container_name: fapinstructor-api
    image: fapinstructor-api
    env_file: .env
    build:
      context: .
      args:
        - NODE_ENV=development
    command:
      [
        "./scripts/wait-for-it.sh",
        "$DB_HOST:5432",
        "--",
        "./node_modules/.bin/nodemon",
        "--inspect=0.0.0.0:9229",
        "./src/bin/www",
      ]
    ports:
      - 9000:3000
      - 9229:9229
      - 9230:9230
    depends_on:
      # - fapinstructor-cache
      - fapinstructor-db
    volumes:
      - .:/opt/node_app/app:delegated
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # be saved on host for next build
      # NOTE: this won't work on Docker Toolbox (virtualbox) which doesn't bind-mount single files
      # docker-compose exec node npm install --save bower
      - ./package.json:/opt/node_app/package.json
      - ./yarn.lock:/opt/node_app/yarn.lock
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_app/node_modules location. Thanks to PR from @brnluiz
      - notused:/opt/node_app/app/node_modules
    environment:
      - NODE_ENV=development

  # fapinstructor-cache:
  #   container_name: $CACHE_HOST
  #   image: redis:alpine
  #   ports:
  #     - $CACHE_PORT:$CACHE_PORT
  #   volumes:
  #     - fi-cache:/data

  fapinstructor-db:
    container_name: $DB_HOST
    image: postgres:12.2-alpine
    restart: always
    ports:
      - $DB_PORT:5432
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_DATABASE
      PGDATA: /var/lib/postgresql/data/pgdata

volumes:
  notused:
  fi-cache:
